{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","setNewDate","setState","console","info","toUTCString","slice","this","window","setInterval","prevProps","name","props","oldName","newName","debug","clearInterval","className","React","PureComponent","getRandomName","value","now","toString","App","hasClock","clockName","newDateId","setClockName","documentClickHandler","contextMenuHandler","e","preventDefault","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,EAyBEC,WAAa,WACX,EAAKC,SAAS,CAAEJ,MAAO,IAAIC,OAE3BI,QAAQC,KAAK,EAAKP,MAAMC,MAAMO,cAAcC,OAAO,IAAK,KA5B5D,uDAOE,WACEC,KAAKP,QAAUQ,OAAOC,YAAYF,KAAKN,WAAY,OARvD,gCAWE,SAAmBS,GACjB,GAAIA,EAAUC,OAASJ,KAAKK,MAAMD,KAAM,CACtC,IAAME,EAAUH,EAAUC,KACpBG,EAAUP,KAAKK,MAAMD,KAG3BR,QAAQY,MAAR,uBAA8BF,EAA9B,eAA4CC,OAjBlD,kCAqBE,WACEN,OAAOQ,cAAcT,KAAKP,WAtB9B,oBA+BE,WACE,IAAQF,EAAUS,KAAKV,MAAfC,MAER,OACE,sBAAKmB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,KAAKK,MAAMD,OAGb,YAED,sBAAMM,UAAU,cAAhB,SACGnB,EAAMO,cAAcC,OAAO,IAAK,YA3C3C,GAA2BY,IAAMC,eCNjC,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWjB,OAAO,GAE3C,MAAM,SAAN,OAAgBe,GAQX,IAAMG,EAAb,4MACE3B,MAAe,CACb4B,UAAU,EACVC,UAAW,WAHf,EAME1B,QAAU,EANZ,EAQE2B,UAAY,EARd,EAgBEC,aAAe,WACb,EAAK1B,SAAS,CAAEwB,UAAWN,OAjB/B,EAoBES,qBAAuB,WACrB,EAAK3B,SAAS,CAAEuB,UAAU,KArB9B,EAwBEK,mBAAqB,SAACC,GACpBA,EAAEC,iBAEE,EAAKnC,MAAM4B,UACb,EAAKvB,SAAS,CAAEuB,UAAU,KA5BhC,uDAUE,WACElB,KAAKP,QAAUQ,OAAOC,YAAYF,KAAKqB,aAAc,MACrDK,SAASC,iBAAiB,QAAS3B,KAAKsB,sBACxCI,SAASC,iBAAiB,cAAe3B,KAAKuB,sBAblD,oBAgCE,WACE,MAAgCvB,KAAKV,MAA7B4B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOd,KAAMe,WAxCvB,GAAyBR,IAAMC,eCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.d3d6f89f.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(this.setNewDate, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      const oldName = prevProps.name;\n      const newName = this.props.name;\n\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  setNewDate = () => {\n    this.setState({ today: new Date() });\n    // eslint-disable-next-line no-console\n    console.info(this.state.today.toUTCString().slice(-12, -4));\n  };\n\n  render() {\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  newDateId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(this.setClockName, 3300);\n    document.addEventListener('click', this.documentClickHandler);\n    document.addEventListener('contextmenu', this.contextMenuHandler);\n  }\n\n  setClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  documentClickHandler = () => {\n    this.setState({ hasClock: true });\n  };\n\n  contextMenuHandler = (e: MouseEvent) => {\n    e.preventDefault();\n\n    if (this.state.hasClock) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}